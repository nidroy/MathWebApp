Описание приложения

Данное веб-приложение разработано с использованием ASP.NET Core и предназначено для управления документами и справочниками. Оно поддерживает выполнение CRUD (создание, чтение, обновление и удаление) операций, а также функции для управления документами, такие как приходование, отмена прихода, резервирование, отмена резервирования, списание и отмена списания документов.

Архитектура

Приложение использует архитектуру Model-View-Controller (MVC), которая разделяет приложение на три основных компонента:

1. Model (Модель): 
   Модели представляют данные и бизнес-логику приложения. В этом приложении модели включают:
   - product: Справочник товаров, содержащий информацию о товаре, такую как название и цена.
   - counterparty: Справочник контрагентов, содержащий данные о контрагентах, включая имя, фамилию, телефон и электронную почту.
   - document_header: Шапка документа, содержащая номер документа, ссылку на справочник контрагента, дату, сумму документа, тип документа и состояние документа.
   - document_line: Строки документа, содержащие ссылку на шапку документа, ссылку на справочник товара, количество, количество в резерве, цену и скидку.
   - product_stock: Остатки товара на складе, содержащие ссылку на справочник товара, фактическое количество и количество в резерве.

2. View (Представление): 
   Представления отвечают за отображение данных пользователю. Они получают данные от контроллеров и представляют их в удобном для восприятия виде. В приложении используются Razor Views для генерации HTML-страниц. Представления включают отображение моделей в виде таблиц, а также карточек для выполнения CRUD операций.

3. Controller (Контроллер): 
   Контроллеры обрабатывают входящие запросы, взаимодействуют с моделями и выбирают соответствующее представление для отображения. В приложении реализованы следующие контроллеры:
   - CounterpartiesController: Управляет справочниками контрагентов, поддерживает операции создания, чтения, обновления и удаления.
   - ProductsController: Управляет справочниками товаров, поддерживает операции создания, чтения, обновления и удаления.
   - DocumentHeadersController: Управляет шапками документов и реализует функции приходования товара, резервирования товара, списания товара и отмены этих операций. Контроллер поддерживает операции создания, чтения, обновления и удаления шапок документов, а также операции, связанные с изменением состояния документа.
   - DocumentLinesController: Управляет строками документов и содержит методы для перерасчета суммы документов. Контроллер поддерживает операции создания, чтения, обновления и удаления строк документов.
   - ProductStocksController: Управляет остатками товаров на складе, поддерживает операции создания, чтения, обновления и удаления.

Логика работы

- Запуск приложения:
  1. Запустите приложение TestWebApplication.exe.
  2. В адресной строке браузера введите URL (например http://localhost:5000), который отображается в консоле.
- Навигация:
  1. На главной странице приложения можно выбрать таблицы для управления записями внурти них. 
  2. Управление товарами осуществляется в окне просмотра записи таблицы "Шапки документов". Перейти на эту страницу можно выбрав таблицу "Шапки документов", открыть необходимую запись кнопкой "Открыть" в таблицы, осуществить приходования, резервирование, списание товара или отмену операции.
- CRUD операции:
  1. Перейдите к соответствующей таблице, чтобы выполнять операции создания, чтения, обновления и удаления записей.
  2. Для создания новой записи используйте форму на странице создания.
  3. Для обновления записи выберите ее из списка и внесите изменения.
  4. Для удаления записи выберите ее и подтвердите удаление.

- Приходование:
  Функция приходования позволяет для каждой строчки в документе на величину поля «количество» увеличивается величина поля «количество» в таблице складских остатков. В результате, количество товаров на складе увеличивается.	
- Резервирование:
  Функция резервирования позволяет для каждой позиции в документе вычислить разницу между значениями полей «количество» и «количество в резерве», и на величину этой разницы для товара из строчки документа увеличить значение поля «количество в резерве» в таблице складских остатков, но таким образом, чтобы не превысить значение поля «количество фактическое». В результате, количество в резерве товаров на складе увеличивается и количество в резерве для строчек документа также увеличиватеся. Сумма документа обновляется.	
- Списание:
  Функция списания позволяет для каждой строчки в документе на величину поля «количество» уменьшить величину полей «количество» и «количество в резерве» в таблице складских остатков. В результате, количество товаров на складе уменьшается.
	
- Перерасчет суммы документов:
  При изменении данных документа или добавления строк документа, контроллер "DocumentLinesController" автоматически выполняет перерасчет суммы документов.
- Получение данных:
  При запросе на отображение данныъх таблиц, контроллеры извлекают данные из базы данных и передают их в представления.
- Создание новых записей:
  Пользователь может создать новую запись для соответствующей таблицы через соответствующие формы. Перед сохранением данных контроллер проверяет их корректность.
- Обновление существующих записей:
  Пользователь может обновить информацию о записях для соответствующей таблицы. Контроллер извлекает текущие данные, позволяет пользователю внести изменения и затем сохраняет обновленные данные.
- Удаление записей:
  Пользователь может удалить запись. Контроллер удаляет запись из базы данных и обновляет отображаемый список.


