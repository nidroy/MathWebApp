// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestWebApplication.Models;

#nullable disable

namespace TestWebApplication.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestWebApplication.Models.counterparty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("counterparty");
                });

            modelBuilder.Entity("TestWebApplication.Models.document_header", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("counterparty_id")
                        .HasColumnType("integer");

                    b.Property<int>("document_amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("document_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("document_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("document_status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("document_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("counterparty_id");

                    b.ToTable("document_header");
                });

            modelBuilder.Entity("TestWebApplication.Models.document_line", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("discount")
                        .HasColumnType("integer");

                    b.Property<int>("document_header_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("reserved_quantity")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("document_header_id");

                    b.HasIndex("product_id");

                    b.ToTable("document_line");
                });

            modelBuilder.Entity("TestWebApplication.Models.product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.ToTable("product");
                });

            modelBuilder.Entity("TestWebApplication.Models.product_stock", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("actual_quantity")
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("reserved_quantity")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("product_stock");
                });

            modelBuilder.Entity("TestWebApplication.Models.document_header", b =>
                {
                    b.HasOne("TestWebApplication.Models.counterparty", "counterparty")
                        .WithMany()
                        .HasForeignKey("counterparty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("counterparty");
                });

            modelBuilder.Entity("TestWebApplication.Models.document_line", b =>
                {
                    b.HasOne("TestWebApplication.Models.document_header", "document_header")
                        .WithMany()
                        .HasForeignKey("document_header_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestWebApplication.Models.product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("document_header");

                    b.Navigation("product");
                });

            modelBuilder.Entity("TestWebApplication.Models.product_stock", b =>
                {
                    b.HasOne("TestWebApplication.Models.product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
